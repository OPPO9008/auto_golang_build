name: Go Build and Package (ZIP)

on:
  workflow_dispatch:
    inputs:
      project_url:
        description: 'Git repository URL'
        required: true
        default: 'OPPO9008/XrayR.git'
      project_branch:
        description: 'branch, tag or SHA'
        required: true
        default: 'master'
      go_version:
        description: 'Go version (e.g., 1.18, 1.19, 1.20)'
        required: true
        default: '1.20'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout the specified project
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.project_url }}
        ref: ${{ github.event.inputs.project_branch }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Go ${{ github.event.inputs.go_version }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ github.event.inputs.go_version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/.go/pkg/mod
        key: ${{ runner.os }}-go-${{ github.event.inputs.go_version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ github.event.inputs.go_version }}-

    - name: Install dependencies
      run: |
       go get -u Xray-core@v1.8.24
       go mod tidy

    - name: Build the project
      run: |
        mkdir -p output
        go build -o output/my-app

    - name: Create ZIP package
      run: |
        cd output
        zip -r my-app.zip my-app

    - name: Archive the ZIP package
      uses: actions/upload-artifact@v4
      with:
        name: my-app-zip
        path: output/my-app.zip
        retention-days: 7  # 保留 7 天，按需调整

    - name: Clean up
      run: rm -rf output
